//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookingAndDelivery.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class BookingAndTransferFoodsEntities : DbContext
    {
        public BookingAndTransferFoodsEntities()
            : base("name=BookingAndTransferFoodsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Branch> Branches { get; set; }
        public DbSet<Contract> Contracts { get; set; }
        public DbSet<Dictionary> Dictionaries { get; set; }
        public DbSet<OrderDetail> OrderDetails { get; set; }
        public DbSet<Order> Orders { get; set; }
        public DbSet<ProductBranch> ProductBranches { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<Role> Roles { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<UserPermission> UserPermissions { get; set; }
        public DbSet<User> Users { get; set; }
    
        public virtual int SP_21424057_Order(Nullable<int> productID, Nullable<int> qty, Nullable<int> customerID, Nullable<decimal> transferFee, ObjectParameter orderIDOut)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var transferFeeParameter = transferFee.HasValue ?
                new ObjectParameter("TransferFee", transferFee) :
                new ObjectParameter("TransferFee", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_21424057_Order", productIDParameter, qtyParameter, customerIDParameter, transferFeeParameter, orderIDOut);
        }
    
        public virtual int SP_21424057_Order_Fix(Nullable<int> productID, Nullable<int> qty, Nullable<int> customerID, Nullable<decimal> transferFee, ObjectParameter orderIDOut)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var transferFeeParameter = transferFee.HasValue ?
                new ObjectParameter("TransferFee", transferFee) :
                new ObjectParameter("TransferFee", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_21424057_Order_Fix", productIDParameter, qtyParameter, customerIDParameter, transferFeeParameter, orderIDOut);
        }
    
        public virtual int SP_21424057_Transfer1(Nullable<int> orderID, Nullable<int> diverID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var diverIDParameter = diverID.HasValue ?
                new ObjectParameter("DiverID", diverID) :
                new ObjectParameter("DiverID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_21424057_Transfer1", orderIDParameter, diverIDParameter);
        }
    
        public virtual int SP_21424057_Transfer1_Fix(Nullable<int> orderID, Nullable<int> diverID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var diverIDParameter = diverID.HasValue ?
                new ObjectParameter("DiverID", diverID) :
                new ObjectParameter("DiverID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_21424057_Transfer1_Fix", orderIDParameter, diverIDParameter);
        }
    
        public virtual int SP_21424057_Transfer2(Nullable<int> orderID, Nullable<int> diverID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var diverIDParameter = diverID.HasValue ?
                new ObjectParameter("DiverID", diverID) :
                new ObjectParameter("DiverID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_21424057_Transfer2", orderIDParameter, diverIDParameter);
        }
    
        public virtual int SP_21424057_Transfer2_Fix(Nullable<int> orderID, Nullable<int> diverID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var diverIDParameter = diverID.HasValue ?
                new ObjectParameter("DiverID", diverID) :
                new ObjectParameter("DiverID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_21424057_Transfer2_Fix", orderIDParameter, diverIDParameter);
        }
    
        public virtual int SP_21424057_UPDATE_PRICE(Nullable<int> productID, Nullable<decimal> newPrice)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var newPriceParameter = newPrice.HasValue ?
                new ObjectParameter("NewPrice", newPrice) :
                new ObjectParameter("NewPrice", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_21424057_UPDATE_PRICE", productIDParameter, newPriceParameter);
        }
    
        public virtual int SP_21424057_UPDATE_PRICE_Fix(Nullable<int> productID, Nullable<decimal> newPrice)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var newPriceParameter = newPrice.HasValue ?
                new ObjectParameter("NewPrice", newPrice) :
                new ObjectParameter("NewPrice", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_21424057_UPDATE_PRICE_Fix", productIDParameter, newPriceParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int USP_21424028_Contract_Extension(Nullable<long> iD, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424028_Contract_Extension", iDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int USP_21424028_Contract_Extension_Fix(Nullable<long> iD, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424028_Contract_Extension_Fix", iDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int USP_21424028_Insert_Order(Nullable<long> branchID, Nullable<int> payment, Nullable<decimal> amount, Nullable<decimal> totalAmount, Nullable<int> customerCityID, Nullable<int> customerDistrictID, Nullable<decimal> productFee, Nullable<decimal> transferFee, string customerAddress, Nullable<int> status, Nullable<long> driverID, Nullable<long> customerID, Nullable<long> productID, Nullable<int> quantityOrder, Nullable<decimal> price, Nullable<decimal> amountProduct)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(long));
    
            var paymentParameter = payment.HasValue ?
                new ObjectParameter("Payment", payment) :
                new ObjectParameter("Payment", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(decimal));
    
            var customerCityIDParameter = customerCityID.HasValue ?
                new ObjectParameter("CustomerCityID", customerCityID) :
                new ObjectParameter("CustomerCityID", typeof(int));
    
            var customerDistrictIDParameter = customerDistrictID.HasValue ?
                new ObjectParameter("CustomerDistrictID", customerDistrictID) :
                new ObjectParameter("CustomerDistrictID", typeof(int));
    
            var productFeeParameter = productFee.HasValue ?
                new ObjectParameter("ProductFee", productFee) :
                new ObjectParameter("ProductFee", typeof(decimal));
    
            var transferFeeParameter = transferFee.HasValue ?
                new ObjectParameter("TransferFee", transferFee) :
                new ObjectParameter("TransferFee", typeof(decimal));
    
            var customerAddressParameter = customerAddress != null ?
                new ObjectParameter("CustomerAddress", customerAddress) :
                new ObjectParameter("CustomerAddress", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var driverIDParameter = driverID.HasValue ?
                new ObjectParameter("DriverID", driverID) :
                new ObjectParameter("DriverID", typeof(long));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var quantityOrderParameter = quantityOrder.HasValue ?
                new ObjectParameter("QuantityOrder", quantityOrder) :
                new ObjectParameter("QuantityOrder", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var amountProductParameter = amountProduct.HasValue ?
                new ObjectParameter("AmountProduct", amountProduct) :
                new ObjectParameter("AmountProduct", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424028_Insert_Order", branchIDParameter, paymentParameter, amountParameter, totalAmountParameter, customerCityIDParameter, customerDistrictIDParameter, productFeeParameter, transferFeeParameter, customerAddressParameter, statusParameter, driverIDParameter, customerIDParameter, productIDParameter, quantityOrderParameter, priceParameter, amountProductParameter);
        }
    
        public virtual int USP_21424028_Insert_Order_Fix(Nullable<long> branchID, Nullable<int> payment, Nullable<decimal> amount, Nullable<decimal> totalAmount, Nullable<int> customerCityID, Nullable<int> customerDistrictID, Nullable<decimal> productFee, Nullable<decimal> transferFee, string customerAddress, Nullable<int> status, Nullable<long> driverID, Nullable<long> customerID, Nullable<long> productID, Nullable<int> quantityOrder, Nullable<decimal> price, Nullable<decimal> amountProduct)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(long));
    
            var paymentParameter = payment.HasValue ?
                new ObjectParameter("Payment", payment) :
                new ObjectParameter("Payment", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(decimal));
    
            var customerCityIDParameter = customerCityID.HasValue ?
                new ObjectParameter("CustomerCityID", customerCityID) :
                new ObjectParameter("CustomerCityID", typeof(int));
    
            var customerDistrictIDParameter = customerDistrictID.HasValue ?
                new ObjectParameter("CustomerDistrictID", customerDistrictID) :
                new ObjectParameter("CustomerDistrictID", typeof(int));
    
            var productFeeParameter = productFee.HasValue ?
                new ObjectParameter("ProductFee", productFee) :
                new ObjectParameter("ProductFee", typeof(decimal));
    
            var transferFeeParameter = transferFee.HasValue ?
                new ObjectParameter("TransferFee", transferFee) :
                new ObjectParameter("TransferFee", typeof(decimal));
    
            var customerAddressParameter = customerAddress != null ?
                new ObjectParameter("CustomerAddress", customerAddress) :
                new ObjectParameter("CustomerAddress", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var driverIDParameter = driverID.HasValue ?
                new ObjectParameter("DriverID", driverID) :
                new ObjectParameter("DriverID", typeof(long));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var quantityOrderParameter = quantityOrder.HasValue ?
                new ObjectParameter("QuantityOrder", quantityOrder) :
                new ObjectParameter("QuantityOrder", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var amountProductParameter = amountProduct.HasValue ?
                new ObjectParameter("AmountProduct", amountProduct) :
                new ObjectParameter("AmountProduct", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424028_Insert_Order_Fix", branchIDParameter, paymentParameter, amountParameter, totalAmountParameter, customerCityIDParameter, customerDistrictIDParameter, productFeeParameter, transferFeeParameter, customerAddressParameter, statusParameter, driverIDParameter, customerIDParameter, productIDParameter, quantityOrderParameter, priceParameter, amountProductParameter);
        }
    
        public virtual ObjectResult<USP_21424028_Update_Contract_Result> USP_21424028_Update_Contract(Nullable<long> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_21424028_Update_Contract_Result>("USP_21424028_Update_Contract", iDParameter);
        }
    
        public virtual ObjectResult<USP_21424028_Update_Contract_Fix_Result> USP_21424028_Update_Contract_Fix(Nullable<long> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_21424028_Update_Contract_Fix_Result>("USP_21424028_Update_Contract_Fix", iDParameter);
        }
    
        public virtual int USP_21424028_Update_Quantity_Product(Nullable<long> branchID, Nullable<long> productID, Nullable<int> quantity, Nullable<bool> isActive)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(long));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424028_Update_Quantity_Product", branchIDParameter, productIDParameter, quantityParameter, isActiveParameter);
        }
    
        public virtual int USP_21424028_Update_Quantity_Product_Fix(Nullable<long> branchID, Nullable<long> productID, Nullable<int> quantity, Nullable<bool> isActive)
        {
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(long));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(long));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424028_Update_Quantity_Product_Fix", branchIDParameter, productIDParameter, quantityParameter, isActiveParameter);
        }
    
        public virtual int USP_21424031_CancelOrder_DL(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424031_CancelOrder_DL", orderIDParameter);
        }
    
        public virtual int USP_21424031_CancelOrder_DL_Fix(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424031_CancelOrder_DL_Fix", orderIDParameter);
        }
    
        public virtual int USP_21424031_CancelOrder_LU(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424031_CancelOrder_LU", orderIDParameter);
        }
    
        public virtual int USP_21424031_CancelOrder_LU_Fix(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424031_CancelOrder_LU_Fix", orderIDParameter);
        }
    
        public virtual int USP_21424031_OrderConfirm_DL(Nullable<int> orderID, Nullable<int> driverID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var driverIDParameter = driverID.HasValue ?
                new ObjectParameter("DriverID", driverID) :
                new ObjectParameter("DriverID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424031_OrderConfirm_DL", orderIDParameter, driverIDParameter);
        }
    
        public virtual int USP_21424031_OrderConfirm_DL_Fix(Nullable<int> orderID, Nullable<int> driverID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var driverIDParameter = driverID.HasValue ?
                new ObjectParameter("DriverID", driverID) :
                new ObjectParameter("DriverID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424031_OrderConfirm_DL_Fix", orderIDParameter, driverIDParameter);
        }
    
        public virtual int USP_21424031_OrderConfirm_LU(Nullable<int> orderID, Nullable<int> driverID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var driverIDParameter = driverID.HasValue ?
                new ObjectParameter("DriverID", driverID) :
                new ObjectParameter("DriverID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424031_OrderConfirm_LU", orderIDParameter, driverIDParameter);
        }
    
        public virtual int USP_21424031_OrderConfirm_LU_Fix(Nullable<int> orderID, Nullable<int> driverID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var driverIDParameter = driverID.HasValue ?
                new ObjectParameter("DriverID", driverID) :
                new ObjectParameter("DriverID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424031_OrderConfirm_LU_Fix", orderIDParameter, driverIDParameter);
        }
    
        public virtual int USP_21424032_DIRTY_READ(Nullable<long> oRDERS_ID, ObjectParameter tONGTIEN)
        {
            var oRDERS_IDParameter = oRDERS_ID.HasValue ?
                new ObjectParameter("ORDERS_ID", oRDERS_ID) :
                new ObjectParameter("ORDERS_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424032_DIRTY_READ", oRDERS_IDParameter, tONGTIEN);
        }
    
        public virtual int USP_21424032_DIRTY_READ_Fix(Nullable<long> oRDERS_ID, ObjectParameter tONGTIEN)
        {
            var oRDERS_IDParameter = oRDERS_ID.HasValue ?
                new ObjectParameter("ORDERS_ID", oRDERS_ID) :
                new ObjectParameter("ORDERS_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424032_DIRTY_READ_Fix", oRDERS_IDParameter, tONGTIEN);
        }
    
        public virtual int USP_21424032_DIRTY_UPDATE(Nullable<long> oRDERS_ID, Nullable<long> pRODUCT_ID, Nullable<int> qUANTITY, Nullable<decimal> pRICE, Nullable<decimal> aMOUNT)
        {
            var oRDERS_IDParameter = oRDERS_ID.HasValue ?
                new ObjectParameter("ORDERS_ID", oRDERS_ID) :
                new ObjectParameter("ORDERS_ID", typeof(long));
    
            var pRODUCT_IDParameter = pRODUCT_ID.HasValue ?
                new ObjectParameter("PRODUCT_ID", pRODUCT_ID) :
                new ObjectParameter("PRODUCT_ID", typeof(long));
    
            var qUANTITYParameter = qUANTITY.HasValue ?
                new ObjectParameter("QUANTITY", qUANTITY) :
                new ObjectParameter("QUANTITY", typeof(int));
    
            var pRICEParameter = pRICE.HasValue ?
                new ObjectParameter("PRICE", pRICE) :
                new ObjectParameter("PRICE", typeof(decimal));
    
            var aMOUNTParameter = aMOUNT.HasValue ?
                new ObjectParameter("AMOUNT", aMOUNT) :
                new ObjectParameter("AMOUNT", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424032_DIRTY_UPDATE", oRDERS_IDParameter, pRODUCT_IDParameter, qUANTITYParameter, pRICEParameter, aMOUNTParameter);
        }
    
        public virtual int USP_21424032_DIRTY_UPDATE_Fix(Nullable<long> oRDERS_ID, Nullable<long> pRODUCT_ID, Nullable<int> qUANTITY, Nullable<decimal> pRICE, Nullable<decimal> aMOUNT)
        {
            var oRDERS_IDParameter = oRDERS_ID.HasValue ?
                new ObjectParameter("ORDERS_ID", oRDERS_ID) :
                new ObjectParameter("ORDERS_ID", typeof(long));
    
            var pRODUCT_IDParameter = pRODUCT_ID.HasValue ?
                new ObjectParameter("PRODUCT_ID", pRODUCT_ID) :
                new ObjectParameter("PRODUCT_ID", typeof(long));
    
            var qUANTITYParameter = qUANTITY.HasValue ?
                new ObjectParameter("QUANTITY", qUANTITY) :
                new ObjectParameter("QUANTITY", typeof(int));
    
            var pRICEParameter = pRICE.HasValue ?
                new ObjectParameter("PRICE", pRICE) :
                new ObjectParameter("PRICE", typeof(decimal));
    
            var aMOUNTParameter = aMOUNT.HasValue ?
                new ObjectParameter("AMOUNT", aMOUNT) :
                new ObjectParameter("AMOUNT", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424032_DIRTY_UPDATE_Fix", oRDERS_IDParameter, pRODUCT_IDParameter, qUANTITYParameter, pRICEParameter, aMOUNTParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> USP_21424032_READ_DATA_CONTRACT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("USP_21424032_READ_DATA_CONTRACT");
        }
    
        public virtual ObjectResult<Nullable<decimal>> USP_21424032_READ_DATA_CONTRACT_Fix()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("USP_21424032_READ_DATA_CONTRACT_Fix");
        }
    
        public virtual int USP_21424032_WRITE_DATA_CONTRACT(Nullable<long> cONTRACT_ID)
        {
            var cONTRACT_IDParameter = cONTRACT_ID.HasValue ?
                new ObjectParameter("CONTRACT_ID", cONTRACT_ID) :
                new ObjectParameter("CONTRACT_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424032_WRITE_DATA_CONTRACT", cONTRACT_IDParameter);
        }
    
        public virtual int USP_21424032_WRITE_DATA_CONTRACT_Fix(Nullable<long> cONTRACT_ID)
        {
            var cONTRACT_IDParameter = cONTRACT_ID.HasValue ?
                new ObjectParameter("CONTRACT_ID", cONTRACT_ID) :
                new ObjectParameter("CONTRACT_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424032_WRITE_DATA_CONTRACT_Fix", cONTRACT_IDParameter);
        }
    
        public virtual int USP_21424069_DELETE_DATA_PRODUCT(Nullable<long> pRODUCT_ID)
        {
            var pRODUCT_IDParameter = pRODUCT_ID.HasValue ?
                new ObjectParameter("PRODUCT_ID", pRODUCT_ID) :
                new ObjectParameter("PRODUCT_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424069_DELETE_DATA_PRODUCT", pRODUCT_IDParameter);
        }
    
        public virtual int USP_21424069_DELETE_DATA_PRODUCT_Fix(Nullable<long> pRODUCT_ID)
        {
            var pRODUCT_IDParameter = pRODUCT_ID.HasValue ?
                new ObjectParameter("PRODUCT_ID", pRODUCT_ID) :
                new ObjectParameter("PRODUCT_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424069_DELETE_DATA_PRODUCT_Fix", pRODUCT_IDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> USP_21424069_READ_DATA_Orders(Nullable<long> oRDERS_ID)
        {
            var oRDERS_IDParameter = oRDERS_ID.HasValue ?
                new ObjectParameter("ORDERS_ID", oRDERS_ID) :
                new ObjectParameter("ORDERS_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("USP_21424069_READ_DATA_Orders", oRDERS_IDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> USP_21424069_READ_DATA_Orders_Fix(Nullable<long> oRDERS_ID)
        {
            var oRDERS_IDParameter = oRDERS_ID.HasValue ?
                new ObjectParameter("ORDERS_ID", oRDERS_ID) :
                new ObjectParameter("ORDERS_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("USP_21424069_READ_DATA_Orders_Fix", oRDERS_IDParameter);
        }
    
        public virtual ObjectResult<string> USP_21424069_READ_DATA_PRODUCT(Nullable<long> pRODUCT_ID)
        {
            var pRODUCT_IDParameter = pRODUCT_ID.HasValue ?
                new ObjectParameter("PRODUCT_ID", pRODUCT_ID) :
                new ObjectParameter("PRODUCT_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_21424069_READ_DATA_PRODUCT", pRODUCT_IDParameter);
        }
    
        public virtual ObjectResult<string> USP_21424069_READ_DATA_PRODUCT_Fix(Nullable<long> pRODUCT_ID)
        {
            var pRODUCT_IDParameter = pRODUCT_ID.HasValue ?
                new ObjectParameter("PRODUCT_ID", pRODUCT_ID) :
                new ObjectParameter("PRODUCT_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_21424069_READ_DATA_PRODUCT_Fix", pRODUCT_IDParameter);
        }
    
        public virtual int USP_21424069_UPDATE_AMOUNT_ORDER(Nullable<long> oRDERS_ID)
        {
            var oRDERS_IDParameter = oRDERS_ID.HasValue ?
                new ObjectParameter("ORDERS_ID", oRDERS_ID) :
                new ObjectParameter("ORDERS_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424069_UPDATE_AMOUNT_ORDER", oRDERS_IDParameter);
        }
    
        public virtual int USP_21424069_UPDATE_AMOUNT_ORDER_Fix(Nullable<long> oRDERS_ID)
        {
            var oRDERS_IDParameter = oRDERS_ID.HasValue ?
                new ObjectParameter("ORDERS_ID", oRDERS_ID) :
                new ObjectParameter("ORDERS_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424069_UPDATE_AMOUNT_ORDER_Fix", oRDERS_IDParameter);
        }
    
        public virtual int USP_21424069_WRITE_DATA_OrdersDetail(Nullable<long> iD, Nullable<long> oRDERS_ID, Nullable<long> pRODUCT_ID, Nullable<int> qUANTITY, Nullable<decimal> pRICE, Nullable<decimal> aMOUNT)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var oRDERS_IDParameter = oRDERS_ID.HasValue ?
                new ObjectParameter("ORDERS_ID", oRDERS_ID) :
                new ObjectParameter("ORDERS_ID", typeof(long));
    
            var pRODUCT_IDParameter = pRODUCT_ID.HasValue ?
                new ObjectParameter("PRODUCT_ID", pRODUCT_ID) :
                new ObjectParameter("PRODUCT_ID", typeof(long));
    
            var qUANTITYParameter = qUANTITY.HasValue ?
                new ObjectParameter("QUANTITY", qUANTITY) :
                new ObjectParameter("QUANTITY", typeof(int));
    
            var pRICEParameter = pRICE.HasValue ?
                new ObjectParameter("PRICE", pRICE) :
                new ObjectParameter("PRICE", typeof(decimal));
    
            var aMOUNTParameter = aMOUNT.HasValue ?
                new ObjectParameter("AMOUNT", aMOUNT) :
                new ObjectParameter("AMOUNT", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424069_WRITE_DATA_OrdersDetail", iDParameter, oRDERS_IDParameter, pRODUCT_IDParameter, qUANTITYParameter, pRICEParameter, aMOUNTParameter);
        }
    
        public virtual int USP_21424069_WRITE_DATA_OrdersDetail_Fix(Nullable<long> iD, Nullable<long> oRDERS_ID, Nullable<long> pRODUCT_ID, Nullable<int> qUANTITY, Nullable<decimal> pRICE, Nullable<decimal> aMOUNT)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var oRDERS_IDParameter = oRDERS_ID.HasValue ?
                new ObjectParameter("ORDERS_ID", oRDERS_ID) :
                new ObjectParameter("ORDERS_ID", typeof(long));
    
            var pRODUCT_IDParameter = pRODUCT_ID.HasValue ?
                new ObjectParameter("PRODUCT_ID", pRODUCT_ID) :
                new ObjectParameter("PRODUCT_ID", typeof(long));
    
            var qUANTITYParameter = qUANTITY.HasValue ?
                new ObjectParameter("QUANTITY", qUANTITY) :
                new ObjectParameter("QUANTITY", typeof(int));
    
            var pRICEParameter = pRICE.HasValue ?
                new ObjectParameter("PRICE", pRICE) :
                new ObjectParameter("PRICE", typeof(decimal));
    
            var aMOUNTParameter = aMOUNT.HasValue ?
                new ObjectParameter("AMOUNT", aMOUNT) :
                new ObjectParameter("AMOUNT", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_21424069_WRITE_DATA_OrdersDetail_Fix", iDParameter, oRDERS_IDParameter, pRODUCT_IDParameter, qUANTITYParameter, pRICEParameter, aMOUNTParameter);
        }
    }
}
