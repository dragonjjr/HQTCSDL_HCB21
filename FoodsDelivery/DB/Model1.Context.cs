//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FoodsDelivery.DB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class BookingAndTransferFoodsEntities : DbContext
    {
        public BookingAndTransferFoodsEntities()
            : base("name=BookingAndTransferFoodsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Branch> Branches { get; set; }
        public DbSet<Contract> Contracts { get; set; }
        public DbSet<Dictionary> Dictionaries { get; set; }
        public DbSet<OrderDetail> OrderDetails { get; set; }
        public DbSet<Order> Orders { get; set; }
        public DbSet<ProductBranch> ProductBranches { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<Role> Roles { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<UserPermission> UserPermissions { get; set; }
        public DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<SP_test_Result> SP_test()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_test_Result>("SP_test");
        }
    
        public virtual int SP_UPDATE_PRICE(Nullable<int> productID, Nullable<decimal> newPrice)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var newPriceParameter = newPrice.HasValue ?
                new ObjectParameter("NewPrice", newPrice) :
                new ObjectParameter("NewPrice", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_PRICE", productIDParameter, newPriceParameter);
        }
    }
}
